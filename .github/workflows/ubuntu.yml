name: Ubuntu

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: Install LLVM
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-14 llvm-14 lcov
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-14 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-14 100
          sudo update-alternatives --install /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-14 100
          sudo update-alternatives --install /usr/bin/llvm-profdata llvm-profdata /usr/bin/llvm-profdata-14 100

      - name: configure
        run: cmake -Stest -Bbuild -DENABLE_TEST_COVERAGE=1 -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -j4

      - name: test
        run: |
          export LLVM_PROFILE_FILE=build/test/PlumbotTests.profraw
          cd build
          ctest --output-on-failure

      - name: export llvm coverage
        run: |
          llvm-profdata merge -sparse build/test/PlumbotTests.profraw -o plumbot.profdata
          llvm-cov export ./build/test/PlumbotTests \
            -instr-profile=plumbot.profdata \
            -format=lcov > coverage.info

      - name: upload coverage to codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.info
          fail_ci_if_error: true
